@model IEnumerable<BreakfastClub.Models.Reservation>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "List";
}

@if (SignInManager.IsSignedIn(User))
{
    <h1>List of Reservations for Employees to manage</h1>

    <table class="food-table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    Party Size
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Date)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReservationSeats)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        <a asp-controller="Reservation" asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                        <a asp-controller="Reservation" asp-action="Details" asp-route-id="@item.ID">Details</a> |
                        <a asp-controller="Reservation" asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <p>
        <a class="create-food" asp-asp-controller="Reservation" asp-action="Create">Create a New Reservation</a>
    </p>
}
else
{
    <h1>Sorry, you cannot access this page, please <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a></h1>
}

